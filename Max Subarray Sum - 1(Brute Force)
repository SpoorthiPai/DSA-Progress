package arrays;

public class Subarrays {
    public static void maxSubarraySum(int[] numbers){
        int currSum = 0;
        int maxSum = Integer.MIN_VALUE;

        for(int i=0;i<numbers.length;i++){
            for(int j = i;j<numbers.length;j++){
                currSum = 0;
                for(int k=i;k<=j;k++){
                    //subarray sum
                    currSum += numbers[k];
                }
                System.out.println(currSum);
                if(maxSum < currSum){
                    maxSum = currSum;
                }
            }
        }

        System.out.println("max sum = " + maxSum);
    }
    public static void main(String[] args) {
         int[] a = {1,2,3,4,5};
         maxSubarraySum(a);
    }
}

output:
1
3
6
10
15
2
5
9
14
3
7
12
4
9
5
max sum = 15

Time Complexity = O(n^3)
